{"version":3,"sources":["CurrentDate/CurrentDate.js","AddNewTask/AddNewTask.js","Task/Task.js","TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["daysInWeek","CurrentDate","todayDate","Date","currentDayOfWeek","getDay","dateString","toDateString","slice","className","ValidationTextField","withStyles","root","borderColor","borderWidth","color","TextField","AddNewTask","handleEnter","value","handleValue","onChange","onKeyPress","id","label","variant","CustomCheckbox","deepOrange","checked","props","Checkbox","Task","task","onDelete","checkTheBox","done","text","FormControlLabel","control","e","name","onClick","style","marginLeft","TodoList","state","tasks","todoListInputValue","addNewTaskToList","event","key","tasksRef","firebase","database","ref","newTask","nextId","target","push","setState","handleValueChange","handleDelete","taskToDelete","remove","taskId","child","update","on","snapshot","val","newState","this","map","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a28ee5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './CurrentDate.css';\r\n\r\nconst daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nconst CurrentDate = () => {\r\n  const todayDate = new Date();\r\n  const currentDayOfWeek = daysInWeek[todayDate.getDay()];\r\n  const dateString = todayDate.toDateString().slice(4);\r\n\r\n  return (\r\n    <div className=\"current-date\">\r\n      <h1 className=\"primary-data\">{currentDayOfWeek}</h1>\r\n      <p className=\"secondary-data\">{dateString}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentDate;","import React from \"react\";\r\nimport \"./AddNewTask.css\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: '#525252',\r\n      borderWidth: 1,\r\n    },\r\n    '& input:valid:hover + fieldset': {\r\n      borderColor: '#525252',\r\n      borderWidth: 1\r\n    },\r\n    '& label': {\r\n      color: '#525252'\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction AddNewTask({ handleEnter, value, handleValue }) {\r\n\r\n  return (\r\n    <div className=\"AddNewTask\">\r\n      <ValidationTextField color=\"secondary\" value={value}\r\n        onChange={handleValue} onKeyPress={handleEnter}\r\n        id=\"outlined-basic\" label=\"Add a task...\" variant=\"outlined\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewTask;","import React from 'react';\r\nimport './Task.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst CustomCheckbox = withStyles({\r\n\troot: {\r\n\t\tcolor: deepOrange[400],\r\n\t\t'&$checked': {\r\n\t\t\tcolor: deepOrange[500],\r\n\t\t},\r\n\t},\r\n\tchecked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nfunction Task({ task, onDelete, checkTheBox }) {\r\n\tconst label = <p className={`task-text ${task.done ? 'completed' : ''}`}>{task.text}</p>;\r\n\r\n\treturn (\r\n\t\t<div className=\"Task\">\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<CustomCheckbox\r\n\t\t\t\t\t\tchecked={task.done}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tcheckTheBox(e, task.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tname=\"checkedC\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel={label}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"deleteIcon\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tonDelete(task);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<DeleteIcon style={{ marginLeft: 10 }} color=\"secondary\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport './TodoList.css';\r\nimport CurrentDate from '../CurrentDate/CurrentDate';\r\nimport AddNewTask from '../AddNewTask/AddNewTask';\r\nimport Task from '../Task/Task';\r\nimport nextId from 'react-id-generator';\r\nimport firebase from 'firebase'\r\n\r\nexport class TodoList extends Component {\r\n\r\n  componentDidMount() {\r\n    const tasksRef = firebase.database().ref('tasks');\r\n    tasksRef.on('value', (snapshot) => {\r\n      let tasks = snapshot.val();\r\n      let newState = [];\r\n      for (let task in tasks) {\r\n        newState.push({\r\n          id: task,\r\n          text: tasks[task].text,\r\n          done: tasks[task].done\r\n        });\r\n      }\r\n      this.setState({\r\n        tasks: newState\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  state = {\r\n    tasks: [],\r\n    todoListInputValue: '',\r\n  };\r\n\r\n  addNewTaskToList = (event) => {\r\n    if (event.key === 'Enter') {\r\n      const tasksRef = firebase.database().ref('tasks');\r\n      const newTask = {\r\n        id: nextId(),\r\n        text: event.target.value,\r\n        done: false,\r\n      };\r\n      tasksRef.push(newTask);\r\n      this.setState({ todoListInputValue: '' });\r\n    }\r\n  };\r\n\r\n  handleValueChange = (event) => {\r\n    this.setState({ todoListInputValue: event.target.value });\r\n  };\r\n\r\n  handleDelete = (taskToDelete) => {\r\n    const tasksRef = firebase.database().ref(`/tasks/${taskToDelete.id}`);\r\n    tasksRef.remove();\r\n  };\r\n\r\n  checkTheBox = (event, taskId) => {\r\n    const tasksRef = firebase.database().ref(`/tasks`);\r\n    tasksRef.child(taskId).update({ done: event.target.checked });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TodoList\">\r\n        <CurrentDate />\r\n        <AddNewTask\r\n          handleEnter={this.addNewTaskToList}\r\n          handleValue={this.handleValueChange}\r\n          value={this.state.todoListInputValue}\r\n        />\r\n        <div>\r\n          {this.state.tasks.map((task) => (\r\n            <Task\r\n              key={task.id}\r\n              task={task}\r\n              onDelete={this.handleDelete}\r\n              checkTheBox={this.checkTheBox}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\nimport './App.css';\n\nimport TodoList from \"./TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <TodoList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from 'firebase/app'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzbP_fCnQqYm5ySd5Sk1Ec71mnrSncjLU\",\n  authDomain: \"todolist-8947f.firebaseapp.com\",\n  databaseURL: \"https://todolist-8947f-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"todolist-8947f\",\n  storageBucket: \"todolist-8947f.appspot.com\",\n  messagingSenderId: \"658656224852\",\n  appId: \"1:658656224852:web:48d2b27adb75637b46efc1\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}