{"version":3,"sources":["CurrentDate/CurrentDate.js","AddItem/AddItem.js","Item/Item.js","TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["daysInWeek","CurrentDate","currDate","Date","day","getDay","dateStr","toDateString","slice","className","ValidationTextField","withStyles","root","borderColor","borderWidth","color","TextField","AddItem","handleEnter","value","handleValue","onChange","onKeyPress","id","label","variant","CustomCheckbox","deepOrange","checked","props","Checkbox","Item","task","onDelete","useState","setChecked","FormControlLabel","control","event","target","name","onClick","style","marginLeft","TodoList","items","setItems","addItemInputVal","setAddItemInputVal","handleDelete","filteredItems","filter","item","key","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAGMA,G,YAAa,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,aAevEC,EAbK,WAChB,IAAMC,EAAW,IAAIC,KACfC,EAAMJ,EAAWE,EAASG,UAC1BC,EAAUJ,EAASK,eAAeC,MAAM,GAE9C,OACE,sBAAKC,UAAU,eAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,mBAAGK,UAAU,iBAAb,SAA+BH,Q,wBCNnCI,EAAsBC,YAAW,CACrCC,KAAM,CACJ,2BAA4B,CAC1BC,YAAa,UACbC,YAAa,GAEf,iCAAkC,CAChCD,YAAa,UACbC,YAAa,GAEf,UAAW,CACTC,MAAO,aAXeJ,CAczBK,KAaYC,MAXf,YAAuD,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAErC,OACE,qBAAKX,UAAU,UAAf,SACE,cAACC,EAAD,CAAqBK,MAAM,YAAYI,MAAOA,EAC5CE,SAAUD,EAAaE,WAAYJ,EACnCK,GAAG,iBAAiBC,MAAM,gBAAgBC,QAAQ,gB,4DCpBpDC,EAAiBf,YAAW,CAC9BC,KAAM,CACFG,MAAOY,IAAW,KAClB,YAAa,CACTZ,MAAOY,IAAW,OAG1BC,QAAS,IAPUjB,EAQpB,SAACkB,GAAD,OAAW,cAACC,EAAA,EAAD,aAAUf,MAAM,WAAcc,OAuB7BE,MApBf,YAAmC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EAEAC,oBAAS,GAFT,mBAEvBN,EAFuB,KAEdO,EAFc,KAGxBX,EAAQ,mBAAGf,UAAS,oBAAemB,EAAU,YAAc,IAAnD,SAA0DI,IAMxE,OACI,sBAAKvB,UAAU,OAAf,UACI,cAAC2B,EAAA,EAAD,CACIC,QAAS,cAACX,EAAD,CAAgBE,QAASA,EAASP,SAPlC,SAACiB,GAClBH,EAAWG,EAAMC,OAAOX,UAMmDY,KAAK,aACxEhB,MAAOA,IAEX,qBAAKf,UAAU,aAAagC,QAAS,WAAOR,EAASD,IAArD,SAA6D,cAAC,IAAD,CAAYU,MAAO,CAAEC,WAAY,IAAM5B,MAAM,oBCKvG6B,MAlCf,WAAqB,IAAD,EAEQV,mBAAS,CAAC,WAAY,iBAAkB,gBAFhD,mBAEXW,EAFW,KAEJC,EAFI,OAG4BZ,mBAAS,IAHrC,mBAGXa,EAHW,KAGMC,EAHN,KAgBZC,EAAe,SAACjB,GACnB,IAAMkB,EAAgBL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,IAASpB,KACpDc,EAASI,IAGZ,OACE,sBAAKzC,UAAU,WAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASS,YAnBU,SAAAoB,GACH,UAAdA,EAAMe,MACRP,EAAS,GAAD,mBAAKD,GAAL,CAAYP,EAAMC,OAAOpB,SACjC6B,EAAmB,MAgBmB5B,YAZhB,SAAAkB,GACxBU,EAAmBV,EAAMC,OAAOpB,QAWwCA,MAAO4B,IAC7E,8BACGF,EAAMS,KAAI,SAACF,EAAMG,GAAP,OACT,cAAC,EAAD,CAAkBvB,KAAMoB,EAAMnB,SAAUgB,GAA7BM,YCtBNC,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f293ef32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './CurrentDate.css';\r\n\r\nconst daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nconst CurrentDate = () => {\r\n    const currDate = new Date(); \r\n    const day = daysInWeek[currDate.getDay()];\r\n    const dateStr = currDate.toDateString().slice(4);\r\n\r\n    return (\r\n      <div className=\"current-date\">\r\n          <h1 className=\"primary-data\">{day}</h1>\r\n          <p className=\"secondary-data\">{dateStr}</p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CurrentDate;","import React from \"react\";\r\nimport \"./AddItem.css\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: '#525252',\r\n      borderWidth: 1,\r\n    },\r\n    '& input:valid:hover + fieldset': {\r\n      borderColor: '#525252',\r\n      borderWidth: 1\r\n    },\r\n    '& label': {\r\n      color: '#525252'\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction AddItem({ handleEnter, value, handleValue }) {\r\n\r\n  return (\r\n    <div className=\"AddItem\">\r\n      <ValidationTextField color=\"secondary\" value={value}\r\n        onChange={handleValue} onKeyPress={handleEnter}\r\n        id=\"outlined-basic\" label=\"Add a task...\" variant=\"outlined\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { useState } from \"react\";\r\nimport './Item.css'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color: deepOrange[400],\r\n        '&$checked': {\r\n            color: deepOrange[500],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\nfunction Item({ task, onDelete }) {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const label = <p className={`item-text ${checked ? 'completed' : ''}`}>{task}</p>;\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Item\">\r\n            <FormControlLabel\r\n                control={<CustomCheckbox checked={checked} onChange={handleChange} name=\"checkedC\" />}\r\n                label={label}\r\n            />\r\n            <div className=\"deleteIcon\" onClick={() => {onDelete(task)}}><DeleteIcon style={{ marginLeft: 10 }} color=\"secondary\" /></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","import React, { useState } from \"react\";\r\nimport \"./TodoList.css\";\r\nimport CurrentDate from \"../CurrentDate/CurrentDate\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\nimport Item from \"../Item/Item\";\r\n\r\nfunction TodoList() {\r\n\r\n  const [items, setItems] = useState(['Buy eggs', 'Cook breakfast', 'Do homework']);\r\n  const [addItemInputVal, setAddItemInputVal] = useState('');\r\n\r\n  const handleAddInput = event => {\r\n    if (event.key === 'Enter') {\r\n      setItems([...items, event.target.value]);\r\n      setAddItemInputVal('');\r\n    } \r\n  }\r\n\r\n  const handleValueChange = event => {\r\n    setAddItemInputVal(event.target.value);\r\n  }\r\n\r\n  const handleDelete = (task) => {\r\n     const filteredItems = items.filter(item => item !== task) ;\r\n     setItems(filteredItems);\r\n  }\r\n\r\n  return (\r\n    <div className=\"TodoList\">\r\n      <CurrentDate />\r\n      <AddItem handleEnter={handleAddInput} handleValue={handleValueChange} value={addItemInputVal}/>\r\n      <div>\r\n        {items.map((item, index) => (\r\n          <Item key={index} task={item} onDelete={handleDelete}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React  from \"react\";\nimport './App.css';\n\nimport TodoList from \"./TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <TodoList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}